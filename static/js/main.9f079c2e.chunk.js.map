{"version":3,"sources":["components/CardImage.js","components/Card.js","components/CardTitle.js","components/CardText.js","components/Button.js","App.js","reportWebVitals.js","index.js"],"names":["CardImage","props","src","imgUrl","className","alt","Card","style","children","CardTitle","CardText","Button","href","url","App","width","marginBottom","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2LAQeA,EANG,SAACC,GAAD,OAAW,qBAAKC,IAAKD,EAAME,OAAQC,UAAU,eAAeC,IAAI,SCgBnEC,EAfF,SAACL,GACV,OACI,sBAAKG,UAAU,wBAAwBG,MAAON,EAAMM,MAApD,UACKN,EAAME,QAAU,cAAC,EAAD,CAAWA,OAAQF,EAAME,SAC1C,qBAAKC,UAAU,YAAf,SAA4BH,EAAMO,eCC/BC,EANG,SAACR,GAAD,OAAW,oBAAIG,UAAU,aAAd,SAA4BH,EAAMO,YCMhDE,EANE,SAACT,GAAD,OAAW,mBAAGG,UAAU,YAAb,SAA0BH,EAAMO,YCO7CG,EAPA,SAACV,GAAD,OAAW,mBAAGW,KAAMX,EAAMY,IAAKT,UAAU,kBAA9B,SAAiDH,EAAMO,YC8BlEM,MAzBf,WACE,OACE,sBAAKV,UAAU,4BAAf,UACE,eAAC,EAAD,CAAMD,OAJA,gKAIaI,MAAO,CAACQ,MAAO,QAASC,aAAc,QAAzD,UACI,cAAC,EAAD,qBACA,cAAC,EAAD,6GAKA,cAAC,EAAD,8BAEJ,eAAC,EAAD,CAAMT,MAAO,CAACQ,MAAO,SAArB,UACI,cAAC,EAAD,qBACA,cAAC,EAAD,qFAKA,cAAC,EAAD,kCCdKE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.9f079c2e.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\n\nconst CardImage = (props) => <img src={props.imgUrl} className=\"card-img-top\" alt=\"...\"/>\n\nCardImage.propTypes = {\n    imgUrl: PropTypes.string.isRequired\n}\n\nexport default CardImage;\n","import PropTypes from \"prop-types\";\nimport CardImage from \"./CardImage\";\n\nconst Card = (props) => {\n    return (\n        <div className=\"card align-self-start\" style={props.style}>\n            {props.imgUrl && <CardImage imgUrl={props.imgUrl}/>}\n            <div className=\"card-body\">{props.children}</div>\n        </div>\n    )\n}\n\nCard.propTypes = {\n    style: PropTypes.object,\n    imgUrl: PropTypes.string,\n    children: PropTypes.node\n}\n\nexport default Card;\n","import PropTypes from \"prop-types\";\n\nconst CardTitle = (props) => <h5 className=\"card-title\">{props.children}</h5>\n\nCardTitle.propTypes = {\n    children: PropTypes.string.isRequired\n}\n\nexport default CardTitle;\n","import PropTypes from \"prop-types\";\n\nconst CardText = (props) => <p className=\"card-text\">{props.children}</p>\n\nCardText.propTypes = {\n    children: PropTypes.string.isRequired\n}\n\nexport default CardText;\n","import PropTypes from \"prop-types\";\n\nconst Button = (props) => <a href={props.url} className=\"btn btn-success\">{props.children}</a>\n\nButton.propTypes = {\n    url: PropTypes.string,\n    children: PropTypes.string\n}\n\nexport default Button;\n","import './App.css';\nimport Card from \"./components/Card\";\nimport CardTitle from \"./components/CardTitle\";\nimport CardText from \"./components/CardText\";\nimport Button from \"./components/Button\";\n\nconst URL = \"https://images.unsplash.com/photo-1635832636644-7bfbc2c61592?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=875&q=80\";\nfunction App() {\n  return (\n    <div className=\"App container pt-5 d-flex\">\n      <Card imgUrl={URL} style={{width: '20rem', marginBottom: '20px'}}>\n          <CardTitle>Card 1</CardTitle>\n          <CardText>\n          Some quick example text to build \n          on the card title and make up the \n          bulk of the card's content.\n          </CardText>\n          <Button>Go somewhere</Button>\n      </Card>\n      <Card style={{width: '20rem'}}>\n          <CardTitle>Card 2</CardTitle>\n          <CardText>\n          With supporting text below as a \n          natural lead-in to additional \n          content.\n          </CardText>\n          <Button>Go somewhere</Button>\n      </Card>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}